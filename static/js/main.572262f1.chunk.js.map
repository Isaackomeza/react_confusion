{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","alert","this","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","About","leaders","title","Header","toggleNav","toggleModal","handleLogin","state","isNavOpen","isModalOpen","setState","event","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","height","isOpen","navbar","outline","toggle","innerRef","input","Footer","n","Date","getFullYear","CommentForm","postComment","dishId","rating","author","comment","RenderComments","comments","options","year","month","day","comm","date","toLocaleDateString","RenderDish","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.572262f1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'https://my-json-server.typicode.com/Isaackomeza/json-server/';","import React from 'react';\nimport { Card, CardImg, CardImgOverlay,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n    function RenderMenuItem ({dish, onClick}) {\n        return (\n            <Card>\n                <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        );\n    }\n\n      const Menu = (props) => {\n\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\n                    <RenderMenuItem dish={dish} />\n                </div>\n            );\n        });\n\n        if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">            \n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\"> \n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>                \n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n            );\n    }\n\nexport default Menu;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n    function RenderCard({item, isLoading, errMess}) {\r\n    \r\n        if (isLoading) {\r\n            return(\r\n                    <Loading />\r\n            );\r\n        }\r\n        else if (errMess) {\r\n            return(\r\n                    <h4>{errMess}</h4>\r\n            );\r\n        }\r\n        else \r\n            return(\r\n                <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg src={item.image} alt={item.name} />\r\n                        <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            );\r\n    \r\n    }\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\nrender() {      \r\n        return(\r\n            <div className=\"container\">\r\n                            <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            KG 11 Ave,<br />\r\n                            Kigali/Rwanda<br />\r\n                            <i className=\"fa fa-phone\"></i>: +25078 8620 148<br />\r\n                            <i className=\"fa fa-fax\"></i>: +2507 3404 2241<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:isaackomeza@gmail.com\">isaackomeza@gmail.com</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:isaackomeza@gmail.com\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                   <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                    </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n      \r\n    }\r\n  \r\n  }\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader( {leader} ) {\r\n  return (\r\n      <li className=\"media\">\r\n          <img className=\"mr-4\" src={leader.image} alt=\"Shot\" />\r\n          <div className=\"media-body\">\r\n            <h5 className=\"mt-0 mb-1\">{leader.name}</h5>\r\n            <p>{leader.designation}</p>\r\n            <p className=\"mb-4\">{leader.description}</p>\r\n          </div>\r\n      </li>\r\n  );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = (() => {\r\n      if (props.leaders.isLoading) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <Loading />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else if (props.leaders.errMess) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <h4>{props.leaders.errMess}</h4>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <ul className=\"list-unstyled\">\r\n            <Stagger in>\r\n              {\r\n                props.leaders.leaders.map((leader) => {\r\n                  return (\r\n                    <Fade in>\r\n                      <RenderLeader leader={leader} />\r\n                    </Fade>\r\n                  );\r\n                })\r\n              }\r\n            </Stagger>\r\n          </ul>\r\n        );\r\n      }\r\n    })();\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    {leaders}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.svg' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline color=\"info\" onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    let n = new Date().getFullYear()\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                      KG 11 Ave,<br />\r\n\t\t              Kigali/Rwanda<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +25078 8620 148<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +2507 3404 2241<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:isaackomeza@gmail.com\">\r\n                      isaackomeza@gmail.com</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright {n} Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport{Button, Modal, ModalHeader, ModalBody,\n     Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state={\n            isModalOpen: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n      handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n    render(){\n        return(\n            <div>\n                <Button outline color=\"info\" onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span>Submit comment</Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                        <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                            <Label htmlFor=\"Rating\"><strong>Rating</strong></Label>\n                                <div md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".Rating\" name=\"Rating\"\n                                        className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                            <Label htmlFor=\"Name\"><strong>Your Name</strong></Label>\n                                <div md={10}>\n                                    <Control.text model=\".Name\" id=\"Name\" name=\"Name\"\n                                        placeholder=\"Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".Name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"comment\" ><strong>Comment</strong></Label>\n                                <div md={10}>\n                                    <Control.textarea model=\".Comment\" id=\"Comment\" name=\"Comment\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                         />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Submit\n                                    </Button>\n                                </div>\n                            </div>\n                        </LocalForm>\n                        </ModalBody>\n                    </Modal>\n            </div>\n        );\n    }\n}\nfunction RenderComments({comments, postComment, dishId}) {\n    let options = { year: 'numeric', month: 'short', day: '2-digit' };\n    const comm = comments.map((comment) => {\n        if(comment!=null)\n        return (\n          <div>\n              \n            <ul className=\"list-unstyled\" key={comment.id}>\n                <li><p>{comment.comment}</p>\n                <p>--{comment.author} , {new Date(comment.date).toLocaleDateString(\"en-US\", options)}</p></li>\n            </ul>\n          </div>\n        );\n        else\n            return(\n                <div> </div>\n            );\n    });\n    return(\n        <div >\n            <h4>Comments</h4>\n            {comm}\n            <CommentForm dishId={dishId} postComment={postComment} />\n        </div>\n    );\n}\nfunction RenderDish({dish}){\n    return(\n        <div>\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n            <Card>    \n                {/* <CardImg width=\"100%\"  src={dish.image} alt={dish.name} /> */}\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n                <CardBody>\n                <CardTitle>{dish.name}</CardTitle>\n                <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n         </div>\n    );\n}\n  const DishDetail=(props)=>{\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null)\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>{props.dish.name}</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5 m-1\">\n                    <RenderDish dish={props.dish}/>\n                </div>\n                <div className=\"col-12 col-md-5 m-1\">\n                <RenderComments \n                    comments={props.comments}\n                    postComment={props.postComment}\n                    dishId={props.dish.id}\n                />\n                </div>\n            </div>\n            </div>\n        );\n      \n\n}\nexport default DishDetail;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\n// hcygc\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DishDetail from './DishdetailComponent'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\nclass Main extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n    \r\n    const DishWithId = ({match}) => {\r\n      return(\r\n      <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n      />\r\n      );\r\n    };\r\n    \r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        // comment.id = state.comments.length;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component} from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}